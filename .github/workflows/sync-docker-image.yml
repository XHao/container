name: Sync Docker Image

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
    inputs:
      image_to_sync:
        description: 'Docker image to sync (e.g., ubuntu:latest)'
        required: true
        default: 'ubuntu:latest'
      platform:
        description: 'Target platform architecture'
        required: true
        type: choice
        default: 'linux/amd64'
        options:
          - 'linux/amd64'
          - 'linux/arm64'

jobs:
  sync_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image and platform variables
        id: set_vars
        run: |
          # Set defaults for push event
          if [[ "${{ github.event_name }}" == "push" ]]; then
            IMAGE_TO_SYNC="ubuntu:latest"
            PLATFORM="linux/arm64"
          else
            IMAGE_TO_SYNC="${{ github.event.inputs.image_to_sync }}"
            PLATFORM="${{ github.event.inputs.platform }}"
          fi
          echo "IMAGE_TO_SYNC=$IMAGE_TO_SYNC" >> $GITHUB_ENV
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV

      - name: Extract image name and tag
        id: extract_name_tag
        run: |
          IFS=':' read -r NAME TAG <<< "$IMAGE_TO_SYNC"
          if [[ -z "$TAG" ]]; then
            TAG="latest"
          fi
          echo "IMAGE_NAME=$NAME" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Pull and push image
        run: |
          # Convert repository owner to lowercase for GHCR compatibility
          REPOSITORY_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          
          # Pull the image with specified platform
          docker pull --platform "$PLATFORM" "$IMAGE_TO_SYNC"
          
          # Tag for GHCR
          docker tag "$IMAGE_TO_SYNC" \
            "ghcr.io/${REPOSITORY_OWNER_LOWER}/${{ github.event.repository.name }}/${{ steps.extract_name_tag.outputs.IMAGE_NAME }}:${{ steps.extract_name_tag.outputs.IMAGE_TAG }}"
          
            # Add platform suffix to tag to avoid name conflicts
            PLATFORM_SUFFIX=$(echo "$PLATFORM" | tr '/' '-')
            TARGET_IMAGE="ghcr.io/${REPOSITORY_OWNER_LOWER}/${{ github.event.repository.name }}/${{ steps.extract_name_tag.outputs.IMAGE_NAME }}-${PLATFORM_SUFFIX}:${{ steps.extract_name_tag.outputs.IMAGE_TAG }}"

            # Tag for GHCR with platform suffix
            docker tag "$IMAGE_TO_SYNC" "$TARGET_IMAGE"

            # Push to GHCR
            docker push "$TARGET_IMAGE"
